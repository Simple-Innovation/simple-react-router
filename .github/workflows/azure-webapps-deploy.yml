# This workflow will build and deploy a React application to an Azure Web App.
# It uses Bicep to provision Azure resources automatically.
#
# To configure this workflow:
#
# 1. Create an Azure Service Principal with Contributor access to your subscription:
#    az ad sp create-for-rbac --name "simple-react-router-deploy" --role contributor \
#      --scopes /subscriptions/{subscription-id} --sdk-auth
#
# 2. Create the following secrets in your repository (Settings > Secrets and variables > Actions):
#    - AZURE_CREDENTIALS: The entire JSON output from step 1
#    - AZURE_SUBSCRIPTION_ID: Your Azure subscription ID
#    - AZURE_RESOURCE_GROUP: Name of the resource group to create/use (e.g., 'simple-react-router-rg')
#
# 3. Optionally, change the AZURE_WEBAPP_NAME, AZURE_LOCATION, and other environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Deploy to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: simple-react-router    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'dev/dist'     # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '22.x'                      # set this to the node version to use
  AZURE_LOCATION: 'eastus'                  # Azure region for resources
  APP_SERVICE_PLAN_SKU: 'F1'                # App Service Plan SKU (F1=Free, B1=Basic, S1=Standard)

permissions:
  contents: read
  id-token: write

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    outputs:
      webAppName: ${{ steps.deploy-infra.outputs.webAppName }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        uses: azure/cli@v2
        with:
          inlineScript: |
            az group create \
              --name ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --location ${{ env.AZURE_LOCATION }}

      - name: Deploy Azure Infrastructure
        id: deploy-infra
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          template: ./infrastructure/main.bicep
          parameters: >
            webAppName=${{ env.AZURE_WEBAPP_NAME }}
            location=${{ env.AZURE_LOCATION }}
            appServicePlanSku=${{ env.APP_SERVICE_PLAN_SKU }}
            nodeVersion=22-lts
          failOnStdErr: false

      - name: Azure Logout
        if: always()
        run: az logout

  build:
    runs-on: ubuntu-latest
    needs: infrastructure
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build library
        run: npm run build

      - name: Build demo app for production
        run: npm run build:demo

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [infrastructure, build]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ needs.infrastructure.outputs.webAppName }}
          package: .

      - name: Azure Logout
        if: always()
        run: az logout
